-- MySQL Script generated by MySQL Workbench
-- Fri Jun  1 15:44:01 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema librarydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema librarydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `librarydb` DEFAULT CHARACTER SET utf8 ;
USE `librarydb` ;

-- -----------------------------------------------------
-- Table `librarydb`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `librarydb`.`user` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `login` VARCHAR(100) NOT NULL,
  `password` CHAR(40) NOT NULL,
  `name` VARCHAR(200) NOT NULL,
  `role` INT NOT NULL COMMENT 'Три роли:\n0 librarian\n1 reader \n2 supplier',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `login_UNIQUE` (`login` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `librarydb`.`book`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `librarydb`.`book` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(200) NOT NULL,
  `author` VARCHAR(200) NOT NULL,
  `publisher` VARCHAR(200) NOT NULL,
  `publish_year` INT NOT NULL,
  `status` INT NOT NULL COMMENT 'Три статуса:\n0 - library\n1 - exchange\n2 - order',
  `condition` INT NOT NULL COMMENT 'Состояния:\n0 - in_library\n1 - in_reading\n2 - not_available\n3 - returned_to_owner\n4 - on_exchange\n5 - order_in_progress',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `librarydb`.`orderbooks`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `librarydb`.`orderbooks` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `book_id` INT UNSIGNED NOT NULL,
  `supplier_id` INT UNSIGNED NOT NULL,
  `start_date` DATETIME NOT NULL,
  `end_date` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_OrderBooks_Book1_idx` (`book_id` ASC),
  INDEX `fk_OrderBooks_User1_idx` (`supplier_id` ASC),
  CONSTRAINT `fk_OrderBooks_Book1`
    FOREIGN KEY (`book_id`)
    REFERENCES `librarydb`.`book` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_OrderBooks_User1`
    FOREIGN KEY (`supplier_id`)
    REFERENCES `librarydb`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `librarydb`.`librarybooks`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `librarydb`.`librarybooks` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `book_id` INT UNSIGNED NOT NULL,
  `reader_id` INT UNSIGNED NOT NULL,
  `start_date` DATETIME NULL,
  `end_date` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_LibraryBooks_Book1_idx` (`book_id` ASC),
  INDEX `fk_LibraryBooks_User1_idx` (`reader_id` ASC),
  CONSTRAINT `fk_LibraryBooks_Book1`
    FOREIGN KEY (`book_id`)
    REFERENCES `librarydb`.`book` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_LibraryBooks_User1`
    FOREIGN KEY (`reader_id`)
    REFERENCES `librarydb`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `librarydb`.`exchangebooks`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `librarydb`.`exchangebooks` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `book_id` INT UNSIGNED NOT NULL,
  `owner_id` INT UNSIGNED NOT NULL,
  `open_exchange_date` DATETIME NULL,
  `reader_id` INT UNSIGNED NULL,
  `start_date` DATETIME NULL,
  `end_date` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_ExchangeBooks_Book1_idx` (`book_id` ASC),
  INDEX `fk_ExchangeBooks_User1_idx` (`owner_id` ASC),
  INDEX `fk_ExchangeBooks_User2_idx` (`reader_id` ASC),
  CONSTRAINT `fk_ExchangeBooks_Book1`
    FOREIGN KEY (`book_id`)
    REFERENCES `librarydb`.`book` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ExchangeBooks_User1`
    FOREIGN KEY (`owner_id`)
    REFERENCES `librarydb`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ExchangeBooks_User2`
    FOREIGN KEY (`reader_id`)
    REFERENCES `librarydb`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `librarydb`.`user`
-- -----------------------------------------------------
START TRANSACTION;
USE `librarydb`;
INSERT INTO `librarydb`.`user` (`id`, `login`, `password`, `name`, `role`) VALUES (DEFAULT, 'root', '011c945f30ce2cbafc452f39840f025693339c42', 'Oleynik Maxim', 0);
INSERT INTO `librarydb`.`user` (`id`, `login`, `password`, `name`, `role`) VALUES (DEFAULT, 'pavel_e', '011c945f30ce2cbafc452f39840f025693339c42', 'Pavel Epanechkin', 1);
INSERT INTO `librarydb`.`user` (`id`, `login`, `password`, `name`, `role`) VALUES (DEFAULT, 'mikhail', '011c945f30ce2cbafc452f39840f025693339c42', 'Mikhail Kozlov', 2);
INSERT INTO `librarydb`.`user` (`id`, `login`, `password`, `name`, `role`) VALUES (DEFAULT, 'denis_k', '011c945f30ce2cbafc452f39840f025693339c42', 'Kruminsh Denis', 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `librarydb`.`book`
-- -----------------------------------------------------
START TRANSACTION;
USE `librarydb`;
INSERT INTO `librarydb`.`book` (`id`, `title`, `author`, `publisher`, `publish_year`, `status`, `condition`) VALUES (DEFAULT, 'Java for Android Developers For Dummies', 'Barry A. Burd', 'John Wiley & Sons', 2016, 0, 0);
INSERT INTO `librarydb`.`book` (`id`, `title`, `author`, `publisher`, `publish_year`, `status`, `condition`) VALUES (DEFAULT, 'Как стать незаменимым сотрудником', 'Дональд Крэйг', 'Litres', 2017, 1, 3);
INSERT INTO `librarydb`.`book` (`id`, `title`, `author`, `publisher`, `publish_year`, `status`, `condition`) VALUES (DEFAULT, 'UML. Проектирование систем реального времени, распределенных и параллельных приложений', 'Хассан Гома', 'Litres', 2017, 0, 0);
INSERT INTO `librarydb`.`book` (`id`, `title`, `author`, `publisher`, `publish_year`, `status`, `condition`) VALUES (DEFAULT, 'Программирование на Java для начинающих', 'Майк МакГрат', 'Litres', 2018, 2, 2);

COMMIT;


-- -----------------------------------------------------
-- Data for table `librarydb`.`orderbooks`
-- -----------------------------------------------------
START TRANSACTION;
USE `librarydb`;
INSERT INTO `librarydb`.`orderbooks` (`id`, `book_id`, `supplier_id`, `start_date`, `end_date`) VALUES (DEFAULT, 1, 3, '2018-05-01 08:44:07', '2018-05-03 08:03:01');

COMMIT;


-- -----------------------------------------------------
-- Data for table `librarydb`.`librarybooks`
-- -----------------------------------------------------
START TRANSACTION;
USE `librarydb`;
INSERT INTO `librarydb`.`librarybooks` (`id`, `book_id`, `reader_id`, `start_date`, `end_date`) VALUES (DEFAULT, 1, 2, '2018-05-20 15:38:00', '2018-05-30 05:59:00');
INSERT INTO `librarydb`.`librarybooks` (`id`, `book_id`, `reader_id`, `start_date`, `end_date`) VALUES (DEFAULT, 3, 4, NULL, NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `librarydb`.`exchangebooks`
-- -----------------------------------------------------
START TRANSACTION;
USE `librarydb`;
INSERT INTO `librarydb`.`exchangebooks` (`id`, `book_id`, `owner_id`, `open_exchange_date`, `reader_id`, `start_date`, `end_date`) VALUES (DEFAULT, 2, 4, '2018-05-15 17:02:50', 2, '2018-05-15 18:09:10', '2018-05-30 12:03:00');
INSERT INTO `librarydb`.`exchangebooks` (`id`, `book_id`, `owner_id`, `open_exchange_date`, `reader_id`, `start_date`, `end_date`) VALUES (DEFAULT, 2, 4, NULL, NULL, NULL, NULL);

COMMIT;

